name: "Performance Benchmark"
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "*/45 * * * *"
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      placeholder:
        description: "placeholder, no effect"
        required: false

jobs:
  rerun:
    name: Throughput
    runs-on: [self-hosted, linux, gpu]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        model: ["resnet50"]
        branch: ["master"]
        gpu_num_per_node: [1, 4]
    steps:
      - name: Fix permissions
        if: matrix.test_suite != 'mac'
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
      - uses: actions/checkout@v2
      - name: Checkout OneFlow-Benchmark
        uses: actions/checkout@v2
        with:
          repository: Oneflow-Inc/OneFlow-Benchmark
          path: OneFlow-Benchmark
          ref: master
      - name: "Run benchmark"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          set -x
          python3 -m pip install boto3 --user
          INSTALL_CMD="python3 -m pip install oneflow -U --user -f https://staging.oneflow.info/branch/${{ matrix.branch }}/cu102"
          container_name="perf-dog-run-id-${{ github.run_id }}-model-${{ matrix.model }}"
          echo "container_name=$container_name" >> $GITHUB_ENV
          num_gpu=$(nvidia-smi --query-gpu=name --format=csv,noheader | wc -l)
          docker run \
            --shm-size=8g --rm \
            --name $container_name \
            -w $PWD -v $PWD:$PWD \
            -v /dataset:/dataset -v /model_zoo:/model_zoo \
            -e ONEFLOW_BENCHMARK_DIR=${PWD}/OneFlow-Benchmark \
            -e ONEFLOW_BENCHMARK_GPU_NUM_PER_NODE=${{ matrix.gpu_num_per_node }} \
            oneflow-test:$USER \
            bash -c "$INSTALL_CMD && bash models/${{ matrix.model }}.sh" | python3 \
              ${PWD}/postprocess/${{ matrix.model }}.py --stdin \
              --model ${{ matrix.model }} \
              --branch ${{ matrix.branch }} \
              --gpu_num_per_node ${{ matrix.gpu_num_per_node }} \
              --upload_cw
      - name: Remove container
        if: always() && matrix.test_suite != 'mac'
        run: |
          docker rm -f ${container_name} || true
